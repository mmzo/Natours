@keyframes moveInLeft {
  0% {
    opacity: 0;
    /* from the left to the right, so +ve, from right to left is -ve */
    transform: translateX(-10rem); }
  75% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    /* from the left to the right, so +ve, from right to left is -ve */
    transform: translateX(10rem); }
  75% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    /* from the left to the right, so +ve, from right to left is -ve */
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* good practice to do box-sizing like this (inherit from body) */
  box-sizing: inherit; }

/* root is html selector */
html {
  /* problem with setting root font size to pixels is that we remove
    the ability of users to change the font size themselves. Best practice
    is to set overall font size to a percentage. 
    10px/16px = 62.5 (10px is 63.5% of 16px, the default) */
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* if animation seems to be shaking, thisis a fix */
  /* backface-visibility: hidden; */
  /* to create space between headers and button */
  margin-bottom: 6rem;
  /* 
        other animation settings:
        animation-delay: 3s 
        animation-iterative-count: 3s
        animation-timing-function: ease, ease-in, ease-out; cubic-bezier, etc...
        */ }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* setting up animation */
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;
    /* setting up animation */
    animation: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: .2rem;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  font-size: 1.6rem;
  /* because this is an inline element, we need to give it its own line */
  display: inline-block;
  /* here, this is top/bottom + left/right */
  padding: 1.5rem 4rem;
  border-radius: 10rem;
  transition: all .2s;
  /* to make sure that the after effet is hidden behind the 
    button */
  position: relative; }

.btn:hover {
  transform: translateY(-0.3rem);
  /* x, y (in down direction) blur colour*/
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.3); }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  /* this is in relation to the initial state, not hover state */
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.3); }

.btn::after {
  /* we have to specify content or else it wont appear */
  content: "";
  display: inline-block;
  /* these dimensions are relative to the before button size */
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  /* this position is in relation to the closest element with a relative
        position */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  /* to animate the after effect */
  transition: all .4s; }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn--animated {
  /* setting up animation */
  animation: moveInBottom .75s ease-out;
  /* if the button is visible before animation begins */
  /* animation-fill-mode: backwards; */ }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all .2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-0.2rem); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0rem); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("/static/img/hero.jpg");
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    /* the positional attributes top and left are in relation to the parent element */
    top: 40%;
    left: 50%;
    /* transform is in relation to the element itself */
    transform: translate(-50%, -50%);
    /* to make sure button is centered */
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem)/2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem)/3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem)/3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem)/4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem)/4) + (6rem)); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem)/4) + (2 * 6rem)); }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

/*# sourceMappingURL=main.css.map */